
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '34AA8EFEC874C1D5249F832E199170B5'
    
_lr_action_items = {'ENDIF':([7,9,10,17,18,27,51,58,59,61,62,64,66,69,72,73,80,82,96,100,115,117,119,125,131,132,133,134,135,136,141,142,143,145,],[-7,-76,-76,-5,-6,-10,-8,-33,-29,-31,-32,-35,-30,-34,-36,-76,-37,-28,-41,-76,-40,-76,-39,-76,-69,-70,-76,143,-73,-75,-76,-65,-67,-68,]),'FLOATLITERAL':([75,77,79,81,84,85,93,95,98,99,103,104,105,108,121,122,123,124,129,138,],[-76,-76,-76,-76,-76,-44,-47,106,-76,-72,-61,-43,-62,-76,-46,-63,-64,-76,-44,-76,]),'READ':([7,9,10,17,18,27,51,52,55,58,61,62,64,66,69,72,73,80,96,100,101,115,117,118,119,132,133,135,136,141,142,143,],[-7,-76,-76,-5,-6,-10,-8,-76,74,-33,-31,-32,-35,-30,-34,-36,74,-37,-41,-76,-76,-40,74,74,-39,-70,-76,-73,-75,74,-65,-67,]),'END':([5,7,9,10,11,13,17,18,21,23,25,27,35,51,52,54,55,57,58,59,61,62,63,64,66,69,72,73,80,82,96,115,119,135,136,142,143,],[-76,-7,-76,-76,20,-76,-5,-6,-24,-4,-76,-10,-23,-8,-76,57,-76,-25,-33,-29,-31,-32,-27,-35,-30,-34,-36,-76,-37,-28,-41,-40,-39,-73,-75,-65,-67,]),'SEMICOLON':([4,15,16,28,29,37,43,44,45,70,86,87,94,97,102,106,107,109,110,111,112,113,114,127,137,],[-3,27,-76,-15,-17,-76,-9,51,-16,80,96,-38,-42,115,119,-60,-48,-58,-45,-57,-49,-59,-56,-55,-50,]),'COMPOP':([4,89,94,106,107,109,110,111,112,113,114,127,137,],[-3,99,-42,-60,-48,-58,-45,-57,-49,-59,-56,-55,-50,]),'WHILE':([7,9,10,17,18,27,51,52,55,58,61,62,64,66,69,72,73,80,96,100,101,115,117,118,119,132,133,135,136,141,142,143,],[-7,-76,-76,-5,-6,-10,-8,-76,68,-33,-31,-32,-35,-30,-34,-36,68,-37,-41,-76,-76,-40,68,68,-39,-70,-76,-73,-75,68,-65,-67,]),'ELSE':([7,9,10,17,18,27,51,58,59,61,62,64,66,69,72,73,80,82,96,100,115,117,119,125,135,136,142,143,],[-7,-76,-76,-5,-6,-10,-8,-33,-29,-31,-32,-35,-30,-34,-36,-76,-37,-28,-41,-76,-40,-76,-39,132,-73,-75,-65,-67,]),'MULTIPLY':([4,106,107,109,110,111,112,113,114,127,137,],[-3,-60,-48,-58,122,-57,-49,-59,-56,-55,-50,]),'ASSIGN':([4,26,60,],[-3,36,77,]),'COMMA':([4,16,37,42,47,53,94,106,107,109,110,111,112,113,114,127,130,137,144,],[-3,30,30,50,-20,50,-42,-60,-48,-58,-45,-57,-49,-59,-56,-55,138,-50,138,]),'RPAREN':([4,16,28,29,34,37,39,40,42,45,47,48,49,53,56,88,90,91,92,94,106,107,109,110,111,112,113,114,116,120,124,127,128,129,130,137,139,140,144,146,],[-3,-76,-15,-17,-76,-76,46,-19,-76,-16,-20,-18,-22,-76,-21,97,100,101,102,-42,-60,-48,-58,-45,-57,-49,-59,-56,-71,127,-76,-55,137,-52,-76,-50,-51,-54,-76,-53,]),'WRITE':([7,9,10,17,18,27,51,52,55,58,61,62,64,66,69,72,73,80,96,100,101,115,117,118,119,132,133,135,136,141,142,143,],[-7,-76,-76,-5,-6,-10,-8,-76,65,-33,-31,-32,-35,-30,-34,-36,65,-37,-41,-76,-76,-40,65,65,-39,-70,-76,-73,-75,65,-65,-67,]),'STRINGLITERAL':([36,],[43,]),'FUNCTION':([5,7,9,10,13,17,18,25,27,51,57,],[-76,-7,-76,-76,22,-5,-6,22,-10,-8,-25,]),'INT':([5,9,10,22,27,34,50,51,52,100,101,132,133,],[12,12,12,12,-10,12,12,-8,12,12,12,-70,12,]),'$end':([2,19,20,],[0,-1,-2,]),'BEGIN':([3,4,46,],[5,-3,52,]),'MINUS':([4,94,106,107,109,110,111,112,113,114,127,137,],[-3,105,-60,-48,-58,-45,-57,-49,-59,-56,-55,-50,]),'LPAREN':([4,24,38,65,67,68,71,74,75,76,77,79,81,84,85,93,95,98,99,103,104,105,108,114,121,122,123,124,129,138,],[-3,34,-26,78,79,-74,81,83,-76,-66,-76,-76,-76,-76,-44,-47,108,-76,-72,-61,-43,-62,-76,124,-46,-63,-64,-76,-44,-76,]),'ENDWHILE':([7,9,10,17,18,27,51,58,59,61,62,64,66,69,72,73,80,82,96,101,115,118,119,126,135,136,142,143,],[-7,-76,-76,-5,-6,-10,-8,-33,-29,-31,-32,-35,-30,-34,-36,-76,-37,-28,-41,-76,-40,-76,-39,136,-73,-75,-65,-67,]),'IDENTIFIER':([1,6,7,8,9,10,12,14,17,18,27,30,31,32,33,41,51,52,55,58,61,62,64,66,69,72,73,75,77,78,79,80,81,83,84,85,93,95,96,98,99,100,101,103,104,105,108,115,117,118,119,121,122,123,124,129,132,133,135,136,138,141,142,143,],[4,-11,-7,4,-76,-76,-12,4,-5,-6,-10,4,4,-13,-14,4,-8,-76,4,-33,-31,-32,-35,-30,-34,-36,4,-76,-76,4,-76,-37,-76,4,-76,-44,-47,4,-41,-76,-72,-76,-76,-61,-43,-62,-76,-40,4,4,-39,-46,-63,-64,-76,-44,-70,-76,-73,-75,-76,4,-65,-67,]),'FLOAT':([5,9,10,22,27,34,50,51,52,100,101,132,133,],[6,6,6,6,-10,6,6,-8,6,6,6,-70,6,]),'DIVIDE':([4,106,107,109,110,111,112,113,114,127,137,],[-3,-60,-48,-58,123,-57,-49,-59,-56,-55,-50,]),'RETURN':([7,9,10,17,18,27,51,52,55,58,61,62,64,66,69,72,73,80,96,100,101,115,117,118,119,132,133,135,136,141,142,143,],[-7,-76,-76,-5,-6,-10,-8,-76,75,-33,-31,-32,-35,-30,-34,-36,75,-37,-41,-76,-76,-40,75,75,-39,-70,-76,-73,-75,75,-65,-67,]),'PLUS':([4,94,106,107,109,110,111,112,113,114,127,137,],[-3,103,-60,-48,-58,-45,-57,-49,-59,-56,-55,-50,]),'IF':([7,9,10,17,18,27,51,52,55,58,61,62,64,66,69,72,73,80,96,100,101,115,117,118,119,132,133,135,136,141,142,143,],[-7,-76,-76,-5,-6,-10,-8,-76,76,-33,-31,-32,-35,-30,-34,-36,76,-37,-41,-76,-76,-40,76,76,-39,-70,-76,-73,-75,76,-65,-67,]),'PROGRAM':([0,],[1,]),'INTLITERAL':([75,77,79,81,84,85,93,95,98,99,103,104,105,108,121,122,123,124,129,138,],[-76,-76,-76,-76,-76,-44,-47,113,-76,-72,-61,-43,-62,-76,-46,-63,-64,-76,-44,-76,]),'VOID':([22,],[33,]),'STRING':([5,9,10,27,51,52,100,101,132,133,],[14,14,14,-10,-8,14,14,14,-70,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'any_type':([22,],[31,]),'compop':([89,],[98,]),'cond':([79,81,],[90,91,]),'while_stmt':([55,73,117,118,141,],[62,62,62,62,62,]),'program':([0,],[2,]),'write_stmt':([55,73,117,118,141,],[64,64,64,64,64,]),'func_declarations':([13,25,],[23,35,]),'string_decl':([5,9,10,52,100,101,133,],[9,9,9,9,9,9,9,]),'var_decl':([5,9,10,52,100,101,133,],[10,10,10,10,10,10,10,]),'param_decl':([34,50,],[42,53,]),'assign_expr':([55,73,117,118,141,],[70,70,70,70,70,]),'str':([36,],[44,]),'end_if':([134,],[142,]),'param_decl_list':([34,],[39,]),'id_list':([8,78,83,],[15,88,92,]),'mulop':([110,],[121,]),'end':([11,],[19,]),'float_literal':([95,],[109,]),'int_literal':([95,],[111,]),'pgm_body':([5,],[11,]),'start_while':([55,73,117,118,141,],[71,71,71,71,71,]),'assign_stmt':([55,73,117,118,141,],[58,58,58,58,58,]),'empty':([5,9,10,13,16,25,34,37,42,52,53,55,73,75,77,79,81,84,98,100,101,108,117,118,124,125,130,133,138,141,144,],[7,7,7,21,29,21,40,29,49,7,49,59,59,85,85,85,85,93,85,7,7,85,59,59,129,131,140,7,85,59,140,]),'var_type':([5,9,10,22,34,50,52,100,101,133,],[8,8,8,32,41,41,8,8,8,8,]),'if_stmt':([55,73,117,118,141,],[61,61,61,61,61,]),'start_of_func':([13,25,],[24,24,]),'stmt_list':([55,73,117,118,141,],[63,82,125,126,145,]),'factor':([84,],[94,]),'postfix_expr':([95,],[110,]),'expr_prefix':([75,77,79,81,98,108,124,138,],[84,84,84,84,84,84,84,84,]),'base_stmt':([55,73,117,118,141,],[66,66,66,66,66,]),'start_if':([55,73,117,118,141,],[67,67,67,67,67,]),'call_expr':([95,],[112,]),'read_stmt':([55,73,117,118,141,],[69,69,69,69,69,]),'id':([1,8,14,30,31,41,55,73,78,83,95,117,118,141,],[3,16,26,37,38,47,60,60,16,16,114,60,60,60,]),'expr_list_tail':([130,144,],[139,146,]),'func_decl':([13,25,],[25,25,]),'primary':([95,],[107,]),'return_stmt':([55,73,117,118,141,],[72,72,72,72,72,]),'expr':([75,77,79,81,98,108,124,138,],[86,87,89,89,116,120,130,144,]),'else_part':([125,],[134,]),'decl':([5,9,10,52,100,101,133,],[13,17,18,55,117,118,141,]),'addop':([94,],[104,]),'param_decl_tail':([42,53,],[48,56,]),'func_body':([52,],[54,]),'stmt':([55,73,117,118,141,],[73,73,73,73,73,]),'id_tail':([16,37,],[28,45,]),'end_while':([126,],[135,]),'expr_list':([124,],[128,]),'start_else':([125,],[133,]),'factor_prefix':([84,],[95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body end','program',5,'p_program','LITTLEGram.py',133),
  ('end -> END','end',1,'p_end','LITTLEGram.py',136),
  ('id -> IDENTIFIER','id',1,'p_id','LITTLEGram.py',141),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_program_body','LITTLEGram.py',145),
  ('decl -> string_decl decl','decl',2,'p_decl','LITTLEGram.py',148),
  ('decl -> var_decl decl','decl',2,'p_decl','LITTLEGram.py',149),
  ('decl -> empty','decl',1,'p_decl','LITTLEGram.py',150),
  ('string_decl -> STRING id ASSIGN str SEMICOLON','string_decl',5,'p_string_decl','LITTLEGram.py',155),
  ('str -> STRINGLITERAL','str',1,'p_str','LITTLEGram.py',160),
  ('var_decl -> var_type id_list SEMICOLON','var_decl',3,'p_var_decl','LITTLEGram.py',166),
  ('var_type -> FLOAT','var_type',1,'p_var_type','LITTLEGram.py',171),
  ('var_type -> INT','var_type',1,'p_var_type','LITTLEGram.py',172),
  ('any_type -> var_type','any_type',1,'p_any_type','LITTLEGram.py',177),
  ('any_type -> VOID','any_type',1,'p_any_type','LITTLEGram.py',178),
  ('id_list -> id id_tail','id_list',2,'p_id_list','LITTLEGram.py',181),
  ('id_tail -> COMMA id id_tail','id_tail',3,'p_id_tail','LITTLEGram.py',185),
  ('id_tail -> empty','id_tail',1,'p_id_tail','LITTLEGram.py',186),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_param_decl_list','LITTLEGram.py',195),
  ('param_decl_list -> empty','param_decl_list',1,'p_param_decl_list','LITTLEGram.py',196),
  ('param_decl -> var_type id','param_decl',2,'p_param_decl','LITTLEGram.py',199),
  ('param_decl_tail -> COMMA param_decl param_decl_tail','param_decl_tail',3,'p_param_decl_tail','LITTLEGram.py',203),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_param_decl_tail','LITTLEGram.py',204),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_func_declarations','LITTLEGram.py',209),
  ('func_declarations -> empty','func_declarations',1,'p_func_declarations','LITTLEGram.py',210),
  ('func_decl -> start_of_func LPAREN param_decl_list RPAREN BEGIN func_body END','func_decl',7,'p_func_decl','LITTLEGram.py',213),
  ('start_of_func -> FUNCTION any_type id','start_of_func',3,'p_start_of_func','LITTLEGram.py',217),
  ('func_body -> decl stmt_list','func_body',2,'p_func_body','LITTLEGram.py',223),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','LITTLEGram.py',228),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','LITTLEGram.py',229),
  ('stmt -> base_stmt','stmt',1,'p_stmt','LITTLEGram.py',232),
  ('stmt -> if_stmt','stmt',1,'p_stmt','LITTLEGram.py',233),
  ('stmt -> while_stmt','stmt',1,'p_stmt','LITTLEGram.py',234),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_base_stmt','LITTLEGram.py',237),
  ('base_stmt -> read_stmt','base_stmt',1,'p_base_stmt','LITTLEGram.py',238),
  ('base_stmt -> write_stmt','base_stmt',1,'p_base_stmt','LITTLEGram.py',239),
  ('base_stmt -> return_stmt','base_stmt',1,'p_base_stmt','LITTLEGram.py',240),
  ('assign_stmt -> assign_expr SEMICOLON','assign_stmt',2,'p_assign_stmt','LITTLEGram.py',245),
  ('assign_expr -> id ASSIGN expr','assign_expr',3,'p_assign_expr','LITTLEGram.py',248),
  ('read_stmt -> READ LPAREN id_list RPAREN SEMICOLON','read_stmt',5,'p_read_stmt','LITTLEGram.py',259),
  ('write_stmt -> WRITE LPAREN id_list RPAREN SEMICOLON','write_stmt',5,'p_write_stmt','LITTLEGram.py',263),
  ('return_stmt -> RETURN expr SEMICOLON','return_stmt',3,'p_return_stmt','LITTLEGram.py',268),
  ('expr -> expr_prefix factor','expr',2,'p_expr','LITTLEGram.py',273),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expr_prefix','LITTLEGram.py',285),
  ('expr_prefix -> empty','expr_prefix',1,'p_expr_prefix','LITTLEGram.py',286),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_factor','LITTLEGram.py',297),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_factor_prefix','LITTLEGram.py',301),
  ('factor_prefix -> empty','factor_prefix',1,'p_factor_prefix','LITTLEGram.py',302),
  ('postfix_expr -> primary','postfix_expr',1,'p_postfix_expr','LITTLEGram.py',305),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_postfix_expr','LITTLEGram.py',306),
  ('call_expr -> id LPAREN expr_list RPAREN','call_expr',4,'p_call_expr','LITTLEGram.py',310),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expr_list','LITTLEGram.py',313),
  ('expr_list -> empty','expr_list',1,'p_expr_list','LITTLEGram.py',314),
  ('expr_list_tail -> COMMA expr expr_list_tail','expr_list_tail',3,'p_expr_list_tail','LITTLEGram.py',317),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expr_list_tail','LITTLEGram.py',318),
  ('primary -> LPAREN expr RPAREN','primary',3,'p_primary','LITTLEGram.py',321),
  ('primary -> id','primary',1,'p_primary','LITTLEGram.py',322),
  ('primary -> int_literal','primary',1,'p_primary','LITTLEGram.py',323),
  ('primary -> float_literal','primary',1,'p_primary','LITTLEGram.py',324),
  ('int_literal -> INTLITERAL','int_literal',1,'p_int_literal','LITTLEGram.py',330),
  ('float_literal -> FLOATLITERAL','float_literal',1,'p_float_literal','LITTLEGram.py',335),
  ('addop -> PLUS','addop',1,'p_addop','LITTLEGram.py',340),
  ('addop -> MINUS','addop',1,'p_addop','LITTLEGram.py',341),
  ('mulop -> MULTIPLY','mulop',1,'p_mulop','LITTLEGram.py',345),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','LITTLEGram.py',346),
  ('if_stmt -> start_if LPAREN cond RPAREN decl stmt_list else_part end_if','if_stmt',8,'p_if_stmt','LITTLEGram.py',353),
  ('start_if -> IF','start_if',1,'p_start_if','LITTLEGram.py',357),
  ('end_if -> ENDIF','end_if',1,'p_end_if','LITTLEGram.py',361),
  ('else_part -> start_else decl stmt_list','else_part',3,'p_else_part','LITTLEGram.py',367),
  ('else_part -> empty','else_part',1,'p_else_part','LITTLEGram.py',368),
  ('start_else -> ELSE','start_else',1,'p_start_else','LITTLEGram.py',376),
  ('cond -> expr compop expr','cond',3,'p_cond','LITTLEGram.py',386),
  ('compop -> COMPOP','compop',1,'p_compop','LITTLEGram.py',404),
  ('while_stmt -> start_while LPAREN cond RPAREN decl stmt_list end_while','while_stmt',7,'p_while_stmt','LITTLEGram.py',424),
  ('start_while -> WHILE','start_while',1,'p_start_while','LITTLEGram.py',427),
  ('end_while -> ENDWHILE','end_while',1,'p_end_while','LITTLEGram.py',436),
  ('empty -> <empty>','empty',0,'p_empty','LITTLEGram.py',444),
]
